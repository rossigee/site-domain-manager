apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    workload: app
  name: app
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload: app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        workload: app
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          value: mysql+mysqldb://sdmgr:sdmgr@db/sdmgr
        - name: LDAP_BIND_DN
          value: CN=Your Authentication User,CN=Users,DC=yourdomain,DC=com
        - name: LDAP_BIND_PW
          value: blahblahblah
        - name: LDAP_FILTER
          value: (sAMAccountName=%(username)s)
        - name: LDAP_SEARCH_DN
          value: CN=Users,DC=yourdomain,DC=com
        - name: LDAP_URL
          value: ldaps://yourldapserver:636
        - name: CLOUDWAYS_API_EMAIL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: cloudways.api_email
        - name: CLOUDWAYS_API_TOKEN
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: cloudways.api_token
        - name: LETSENCRYPT_EMAIL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: cloudways.letsencrypt_email
        - name: K8S_API_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: k8s.api_url
        - name: K8S_API_TOKEN
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: k8s.api_token
        - name: K8S_WAF_CONTEXT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: k8s.waf_context
        - name: K8S_WAF_NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: k8s.waf_namespace
        - name: NAMECHEAP_API_USER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: namecheap.api_user
        - name: NAMECHEAP_API_TOKEN
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: namecheap.api_token
        - name: NAMECHEAP_CLIENT_IP
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: namecheap.client_ip
        image: sdmgr:latest
        imagePullPolicy: IfNotPresent
        name: app
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          runAsUser: 0
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: default
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    workload: app
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: sdmgr
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, PATCH, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-origin: "http://localhost:4200/"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
  - host: sdmgr.local
    http:
      paths:
      - backend:
          serviceName: app
          servicePort: 8000
        path: /api/v1(/|$)(.*)
  tls:
  - hosts:
    - sdmgr.local
    secretName: sdmgr-tls
